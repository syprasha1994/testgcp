steps:
# This step install npm packages
- name: 'gcr.io/cloud-builders/npm'
  id: Install
  args: ['install']

# This step runs the unit tests on the app
- name: 'gcr.io/cloud-builders/npm'
  id: Test
  args: ['test']

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/demo-cicd:latest'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/demo-cicd:latest'
- id: 'create-attestation'
  name: 'gcr.io/${PROJECT_ID}/binauthz-attestation:latest'
  args:
  - '--artifact-url'
  - 'gcr.io/$PROJECT_ID/demo-cicd:latest'
  - '--attestor'
  - 'projects/$PROJECT_ID/attestors/vulnz-attestor'
  - '--keyversion'
  - 'projects/$PROJECT_ID/locations/asia-southeast1/keyRings/binauthz/cryptoKeys/vulnz-signer/cryptoKeyVersions/1'
  
# This step deploys the new version of our container image
# in the demo-cicd Kubernetes Engine cluster.
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-f'
  - 'kubernetes.yml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=asia-southeast1'
  - 'CLOUDSDK_CONTAINER_CLUSTER=demo-cloudbuild'
